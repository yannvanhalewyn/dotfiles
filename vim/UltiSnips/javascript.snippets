snippet cl "console.log" b
console.log(${1:${VISUAL:value}});
endsnippet

snippet ce "console.error" b
console.error(${1:${VISUAL:value}});
endsnippet

snippet if "Wraps visual selection in if" b
if (${1:Condition}) {
	${2:${VISUAL:\/\/ code}}
}
endsnippet

snippet ife "Wraps visual selection in if" b
if (${1:Condition}) {
	${2:${VISUAL:\/\/ If code}}
} else {
	${3:// Else code}
}
endsnippet

snippet iferr "rethrow an error" b
if (${1:err}) throw $1;
endsnippet

snippet for "A for loop" b
for (var ${1:i} = 0; $1 < ${2:count}; $1++) {
	${3:${VISUAL}}
}
endsnippet

snippet exp "Exports a node js module" b
module.exports = ${1};
endsnippet

snippet req "A require statement for node modules" b
var ${2:${1/.*\///g}} = require('${1:lib}')$3;
endsnippet

snippet inc "An include statment for node module" b
var ${2:${1/.*\///g}} = include('${1:lib}')$3;
endsnippet

snippet req, "  , la = require('la')" b
  , ${2:${1/.*\///g}} = require('${1:lib}')$3
endsnippet

snippet inc, "  , la = include('la')" b
  , ${2:${1/.*\///g}} = include('${1:lib}')$3
endsnippet

snippet module "Wrapper for module pattern" b
(function() {

	"use strict";

	var $1 = $2

	module.exports = $1;

}())
endsnippet

snippet reactclass "A react class in a module pattern" b
(function() {

	"use strict";

	var React = require('react');

	var $1 = React.createClass({
		render: function() {
			return <p>$1</p>;
		}
	});

	module.exports = $1;

}())
endsnippet

snippet expressRouter "A CRUD router for express" b
(function() {

	"use strict";

	var ${1:RouterName}Router = require('express').Router()
	  , Controller = require('../controllers/${2:controllerPath}')
	  , middlewares = Controller.middlewares

	$1Router.get('/', middlewares.index, Controller.index);
	$1Router.get('/:${3:resource}_id', middlewares.show, Controller.show);
	$1Router.post('/', middlewares.create, Controller.create);
	$1Router.put('/:$3_id', middlewares.update, Controller.update);
	$1Router.delete('/:$3_id', middlewares.destroy, Controller.destroy);

	module.exports = $1Router;

}())
endsnippet

snippet expressController "A CRUD controller for express" b
(function() {

	module.exports = {

		middlewares: {
			index:   [],
			edit:    [],
			create:  [],
			update:  [],
			destroy: []
		},

		index: function(req, res) {
			res.send("P INDEX");
		},

		show: function(req, res) {
			res.send("Show " + req.params.${1:resource}_id)
		},

		create: function(req, res) {
			res.send("CREATE " + req.body);
		},

		update: function(req, res) {
			res.send("UPDATE " + req.params.$1_id);
		},

		destroy: function(req, res) {
			res.send("DESTROY " + req.params.$1_id);
		}
	};

}())
endsnippet

snippet bbcollection "A Backbone collection" b
(function() {

	"use strict";

	var Backbone = require('backbone');

	var $1Model = Backbone.Model.extend({});

	var ${1:ResourceName}Collection = Backbone.Collection.extend({
		model: $1Model,
	});

	module.exports = $1Collection;

}())
endsnippet

snippet beautify "Prints out an entire (JSON) object" i
JSON.stringify(${1:OBJECT}, null, 2)
endsnippet

snippet stacktrace "Prints out the stack trace" b
var e = new Error('dummy');
var stack = e.stack.replace(/^[^\(]+?[\n$]/gm, '')
	.replace(/^\s+at\s+/gm, '')
	.replace(/^Object.<anonymous>\s*\(/gm, '{anonymous}()@')
	.split('\n');
console.log(stack);
endsnippet
